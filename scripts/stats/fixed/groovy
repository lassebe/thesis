{"methodStats":[ {"methodName":"java.lang.System.arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V","totalCalls":2,"argsMatchCount":0,"instructionCount":2,"recorded":false,"interruption":"native method"},{"methodName":"java.lang.Object.<init>()V","totalCalls":264,"argsMatchCount":0,"instructionCount":1,"recorded":false,"interruption":"<init>"},{"methodName":"org.codehaus.groovy.runtime.metaclass.MemoryAwareConcurrentReadMap.lockWrite()V","totalCalls":37,"argsMatchCount":0,"instructionCount":20,"recorded":false,"interruption":"transition or lock"},{"methodName":"java.lang.ThreadGroup.add(Ljava/lang/Thread;)V","totalCalls":2,"argsMatchCount":0,"instructionCount":50,"recorded":false,"interruption":"native method"},{"methodName":"java.lang.Thread.join()V","totalCalls":467,"argsMatchCount":0,"instructionCount":2,"recorded":false,"interruption":"transition or lock"},{"methodName":"org.codehaus.groovy.runtime.metaclass.MemoryAwareConcurrentReadMap.putNonBlocking(Ljava/lang/Object;Ljava/lang/Object;Z)V","totalCalls":38,"argsMatchCount":0,"instructionCount":124,"recorded":false,"interruption":"shared field read"},{"methodName":"org.codehaus.groovy.runtime.metaclass.MemoryAwareConcurrentReadMap$Entry.isValid()Z","totalCalls":32,"argsMatchCount":0,"instructionCount":26,"recorded":false,"interruption":"transition or lock"},{"methodName":"org.codehaus.groovy.runtime.metaclass.TestMemoryAwareMap.testScriptCompilation()V","totalCalls":1,"argsMatchCount":0,"instructionCount":63,"recorded":false,"interruption":"<init>"},{"methodName":"org.codehaus.groovy.runtime.metaclass.MemoryAwareConcurrentReadMap$Entry.getValue()Ljava/lang/Object;","totalCalls":31,"argsMatchCount":0,"instructionCount":9,"recorded":false,"interruption":"transition or lock"},{"methodName":"java.lang.Thread.init0(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;J)V","totalCalls":2,"argsMatchCount":0,"instructionCount":2,"recorded":false,"interruption":"transition or lock"},{"methodName":"java.lang.ref.Reference.<init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V","totalCalls":101,"argsMatchCount":0,"instructionCount":9,"recorded":false,"interruption":"<init>"},{"methodName":"org.codehaus.groovy.runtime.metaclass.TestMemoryAwareMap$PutThread.run()V","totalCalls":35,"argsMatchCount":0,"instructionCount":13,"recorded":false,"interruption":"blacklisted"},{"methodName":"org.codehaus.groovy.runtime.metaclass.TestMemoryAwareMap$PutThread.<init>(I)V","totalCalls":1,"argsMatchCount":0,"instructionCount":9,"recorded":false,"interruption":"<init>"},{"methodName":"org.codehaus.groovy.runtime.metaclass.TestMemoryAwareMap.access$000()Lorg/codehaus/groovy/runtime/metaclass/MemoryAwareConcurrentReadMap;","totalCalls":70,"argsMatchCount":0,"instructionCount":2,"recorded":false,"interruption":"transition or lock"},{"methodName":"java.lang.StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;","totalCalls":2,"argsMatchCount":0,"instructionCount":2,"recorded":false,"interruption":"native method"},{"methodName":"org.codehaus.groovy.runtime.metaclass.MemoryAwareConcurrentReadMap.index(II)I","totalCalls":91,"argsMatchCount":30,"instructionCount":6,"recorded":true,"interruption":""},{"methodName":"org.codehaus.groovy.runtime.metaclass.MemoryAwareConcurrentReadMap.access$000(Lorg/codehaus/groovy/runtime/metaclass/MemoryAwareConcurrentReadMap;)Ljava/lang/ref/ReferenceQueue;","totalCalls":95,"argsMatchCount":0,"instructionCount":3,"recorded":false,"interruption":"shared field read"},{"methodName":"java.lang.Thread.initThreadLocals(Ljava/lang/Thread;)V","totalCalls":2,"argsMatchCount":0,"instructionCount":53,"recorded":true,"interruption":""},{"methodName":"org.codehaus.groovy.runtime.metaclass.MemoryAwareConcurrentReadMap$SoftRef.<init>(Ljava/lang/Object;Lorg/codehaus/groovy/runtime/metaclass/MemoryAwareConcurrentReadMap$Entry;Ljava/lang/ref/ReferenceQueue;)V","totalCalls":101,"argsMatchCount":0,"instructionCount":8,"recorded":false,"interruption":"<init>"},{"methodName":"org.codehaus.groovy.runtime.metaclass.MemoryAwareConcurrentReadMap.removeDereferencedEntries()V","totalCalls":40,"argsMatchCount":0,"instructionCount":19,"recorded":false,"interruption":"shared field read"},{"methodName":"java.lang.ref.SoftReference.<init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V","totalCalls":101,"argsMatchCount":0,"instructionCount":8,"recorded":false,"interruption":"<init>"},{"methodName":"java.lang.Thread.getThreadGroup()Ljava/lang/ThreadGroup;","totalCalls":2,"argsMatchCount":0,"instructionCount":3,"recorded":true,"interruption":""},{"methodName":"java.lang.Integer.hashCode()I","totalCalls":80,"argsMatchCount":14,"instructionCount":4,"recorded":true,"interruption":""},{"methodName":"java.lang.Thread.start()V","totalCalls":18,"argsMatchCount":0,"instructionCount":2,"recorded":false,"interruption":"transition or lock"},{"methodName":"java.lang.Number.<init>()V","totalCalls":112,"argsMatchCount":0,"instructionCount":3,"recorded":false,"interruption":"<init>"},{"methodName":"org.codehaus.groovy.runtime.metaclass.MemoryAwareConcurrentReadMap$Entry.getKey()Ljava/lang/Object;","totalCalls":20,"argsMatchCount":0,"instructionCount":9,"recorded":false,"interruption":"transition or lock"},{"methodName":"java.lang.StringBuilder.append(I)Ljava/lang/StringBuilder;","totalCalls":2,"argsMatchCount":0,"instructionCount":2,"recorded":false,"interruption":"native method"},{"methodName":"java.lang.ref.Reference.get()Ljava/lang/Object;","totalCalls":126,"argsMatchCount":0,"instructionCount":3,"recorded":false,"interruption":"transition or lock"},{"methodName":"java.lang.Thread$Permit.<init>()V","totalCalls":2,"argsMatchCount":0,"instructionCount":6,"recorded":false,"interruption":"<init>"},{"methodName":"java.lang.Thread.currentThread()Ljava/lang/Thread;","totalCalls":2,"argsMatchCount":0,"instructionCount":2,"recorded":false,"interruption":"native method"},{"methodName":"java.lang.ref.ReferenceQueue.poll()Ljava/lang/ref/Reference;","totalCalls":43,"argsMatchCount":42,"instructionCount":2,"recorded":true,"interruption":""},{"methodName":"org.codehaus.groovy.runtime.metaclass.MemoryAwareConcurrentReadMap$Entry.setValue(Ljava/lang/Object;Ljava/lang/Object;Z)V","totalCalls":46,"argsMatchCount":0,"instructionCount":38,"recorded":false,"interruption":"shared field read"},{"methodName":"org.codehaus.groovy.runtime.metaclass.MemoryAwareConcurrentReadMap$Entry.access$100(Lorg/codehaus/groovy/runtime/metaclass/MemoryAwareConcurrentReadMap$Entry;)I","totalCalls":20,"argsMatchCount":9,"instructionCount":3,"recorded":true,"interruption":""},{"methodName":"java.lang.Thread.isDaemon()Z","totalCalls":2,"argsMatchCount":1,"instructionCount":3,"recorded":true,"interruption":""},{"methodName":"java.lang.ref.SoftReference.get()Ljava/lang/Object;","totalCalls":126,"argsMatchCount":0,"instructionCount":15,"recorded":false,"interruption":"transition or lock"},{"methodName":"java.lang.Integer.intValue()I","totalCalls":42,"argsMatchCount":0,"instructionCount":3,"recorded":false,"interruption":"blacklisted"},{"methodName":"org.codehaus.groovy.runtime.metaclass.MemoryAwareConcurrentReadMap.put(Ljava/lang/Object;Ljava/lang/Object;)V","totalCalls":38,"argsMatchCount":0,"instructionCount":12,"recorded":false,"interruption":"shared field read"},{"methodName":"org.codehaus.groovy.runtime.metaclass.MemoryAwareConcurrentReadMap$Entry.access$202(Lorg/codehaus/groovy/runtime/metaclass/MemoryAwareConcurrentReadMap$Entry;Lorg/codehaus/groovy/runtime/metaclass/MemoryAwareConcurrentReadMap$Entry;)Lorg/codehaus/groovy/runtime/metaclass/MemoryAwareConcurrentReadMap$Entry;","totalCalls":55,"argsMatchCount":6,"instructionCount":5,"recorded":true,"interruption":""},{"methodName":"java.lang.Thread.getPriority()I","totalCalls":2,"argsMatchCount":1,"instructionCount":3,"recorded":true,"interruption":""},{"methodName":"org.codehaus.groovy.runtime.metaclass.TestMemoryAwareMap$GetThread.run()V","totalCalls":35,"argsMatchCount":0,"instructionCount":9,"recorded":false,"interruption":"transition or lock"},{"methodName":"java.lang.StringBuilder.toString()Ljava/lang/String;","totalCalls":2,"argsMatchCount":0,"instructionCount":2,"recorded":false,"interruption":"blacklisted"},{"methodName":"java.lang.Thread.<init>()V","totalCalls":2,"argsMatchCount":0,"instructionCount":7,"recorded":false,"interruption":"<init>"},{"methodName":"java.lang.Thread.<init>(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;J)V","totalCalls":2,"argsMatchCount":0,"instructionCount":66,"recorded":false,"interruption":"<init>"},{"methodName":"org.codehaus.groovy.runtime.metaclass.MemoryAwareConcurrentReadMap.unlockWrite()V","totalCalls":72,"argsMatchCount":0,"instructionCount":28,"recorded":false,"interruption":"transition or lock"},{"methodName":"java.lang.StringBuilder.<init>()V","totalCalls":2,"argsMatchCount":0,"instructionCount":2,"recorded":false,"interruption":"<init>"},{"methodName":"java.lang.Integer.hashCode(I)I","totalCalls":66,"argsMatchCount":65,"instructionCount":2,"recorded":true,"interruption":""},{"methodName":"org.codehaus.groovy.runtime.metaclass.TestMemoryAwareMap$GetThread.<init>(I)V","totalCalls":1,"argsMatchCount":0,"instructionCount":9,"recorded":false,"interruption":"<init>"},{"methodName":"org.codehaus.groovy.runtime.metaclass.MemoryAwareConcurrentReadMap$Entry.<init>(Lorg/codehaus/groovy/runtime/metaclass/MemoryAwareConcurrentReadMap;Ljava/lang/Object;Ljava/lang/Object;IZ)V","totalCalls":46,"argsMatchCount":0,"instructionCount":14,"recorded":false,"interruption":"<init>"},{"methodName":"java.lang.Integer.equals(Ljava/lang/Object;)Z","totalCalls":42,"argsMatchCount":0,"instructionCount":15,"recorded":false,"interruption":"blacklisted"},{"methodName":"org.codehaus.groovy.runtime.metaclass.TestMemoryAwareMap.<init>()V","totalCalls":1,"argsMatchCount":0,"instructionCount":3,"recorded":false,"interruption":"<init>"},{"methodName":"java.lang.Object.notify()V","totalCalls":71,"argsMatchCount":0,"instructionCount":2,"recorded":false,"interruption":"transition or lock"},{"methodName":"org.codehaus.groovy.runtime.metaclass.MemoryAwareConcurrentReadMap.get(Ljava/lang/Object;)Ljava/lang/Object;","totalCalls":37,"argsMatchCount":0,"instructionCount":61,"recorded":false,"interruption":"transition or lock"},{"methodName":"java.lang.Integer.<init>(I)V","totalCalls":112,"argsMatchCount":0,"instructionCount":6,"recorded":false,"interruption":"<init>"}]}
